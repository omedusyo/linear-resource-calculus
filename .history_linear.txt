#V2
fn f[x] { %x }
f[5]
f[f[16]]
123
[1, 2]
+[5, 3]
[+[5, 6], 2]
#foo [1,2,3]
#foo []
fn f[x] { %x }
match #zero [] { #zero[] . [] }
match #zero [] { #zero[] . #zero[] }
match #zero [] { #zero[] . [#zero[], #zero[]] }
match #zero [] { #zero[] . [#zero[], #zero[]]  | #succ n . %n }
match #succ #zero [] { #zero[] . [#zero[], #zero[]]  | #succ n . %n }
match #succ #zero [] { #zero[] . [#zero[], #zero[]]  | #succ n . [%n] }
match #succ #zero [] { #zero[] . [#zero[], #zero[]]  | #succ n . %n }
match #succ #zero [] { #zero[] . [#zero[], #zero[]]  | #succ n . [%n] }
obj {. #foo[] . 123 }
incrementing_server[]
send[incrementing_server[], #stop[]]
send[incrementing_server[], #apply[5]]
==[5, 0]
range-iter[5, 0]
dup_nat[5]
dup[5]
dup[#cons[5, #nil[]]]
