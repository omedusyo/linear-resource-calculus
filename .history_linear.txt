#V2
let { [x, y] = [20, 30] . [%y, %x] }
let { [[[x]], [y, z]] = [[[20]], [30, 40]] . [%y, %x, %z] }
match [20, [30, 40]] { [x, [y, z]] . [%y, %x, %z] }
123
123123123
123
[+[5, 6], 2]
fn mul_5[x] { *[%x, 5] }
mul_5[6]
send[example_tuple_0[], #fst[]]
example_tuple_0[]
#fst[]
let { x = 123 . %x }
let { x = 123 . move x }
let { x = 123 . [clone x, %x] }
let { x = 123 . [clone x, move x] }
let { x = 123 . [%x, clone x] }
let { x = 123 . [] }
let { x = 123 . drop x . [] }
example_tuple_1[]
range-iter[5, 0]
range-iter-simpler[5, 0]
fn f[x] { %x }
obj {. #foo[] . 123 }
send[incrementing-server[], #apply[5]]
==[5, 0]
incrementing-server[]
range-iter[5, 0]
map-server[incrementing-server[], range-iter[5, 0]]
fib[5, 0]
dup_nat[#succ#succ#zero[]]
dup[#cons[5, #nil[]]]
123 // 231
123 // 
dup[#cons[5, #nil[]]]
+[1,1]
[+[5, 6], 2]
fn mul_5[x] { *[%x, 5] }
mul_5[6]
fn pm[x] { 123 }
fn pm[x] { match %x { [x0, x1] . %x } }
fn pm[x] { match %x { [x0, [x1]] . %x } }
fn pm[x] { match %x { #foo [] . %x } }
fn pm[x] { match %x { #foo [x] . %x } }
fn pm[x] { match %x { #foo [x, y] . %x } }
fn pm[x] { match %x { #foo #bar [] . %x } }
fn pm[x] { match %x { #foo { #bar [] . %x } } }
fn pm[x] { match %x { #foo { #bar [] . %x | #quux [x] . %x} } }
#foo []
fn pm[x] { match %x { #foo { #bar [] . %x | #quux [x] . %x } } }
#foo []
pm[123]
fn pm[x] { match %x { #foo [x] . %x } }
fn pm[x] { match %x { #foo . %x } }
pm[#foo 123]
fn pm[x] { match %x { #foo . %x } }
#foo
#foo []
fn pm[x] { match %x { #foo . %x } }
pm[#foo 123]
pm[#foo]
fn pm[x] { match %x { #foo . %x } }
pm[#foo]
fn pm[x] { match %x { #foo []. %x } }
pm[#foo]
pm[#foo []]
fn pm[x] { match %x { #foo []. 123 } }
pm[#foo []]
pm[#foo 123]
fn pm[x] { match %x { #foo [] . %x } }
fn pm[x] { match %x { x . %x } }
pm[#foo 123]
fn pm[x] { match %x { x . %x } }
pm[#foo 123]
#foo 123
#foo[1,2,3]
#foo
#fo
#fasdasdasd
pm[#foo 123]
match 123 { #foo x . %x }
match #foo 123 { #foo x . %x }
match #foo [] { #foo x . %x }
match #foo #bar [] { #foo x . %x }
match #foo #bar [] { #foo #bar x . %x }
match #foo #bar [1,2] { #foo #bar x . %x }
match #foo #bar [1,2] { #foo #bar [x, y] . [%y, %x] }
match #foo #bar [1,[50, 2]] { #foo #bar [x, [y, z]] . [%y, %x, %z] }
match #foo { #foo . 123 }
match #foo { #foo . 123 | #bar . 12 }
match #foo { || #foo . 123 | #bar . 12 }
match #foo { #foo . 123 | #bar . 12 }
match #bar { #foo . 123 | #bar . 12 }
match #a { #a { #a0 . 123 }   }
match #a #a0 { #a { #a0 . 123 }   }
match #a #a0 { #a { #a0 . 123 | #a1 . 123 }   }
match #a #a1 { #a { #a0 . 123 | #a1 . 123 }   }
match #a #a1 { #a { #a0 . 123 | #a1 . 512 }   }
match #a #a1 { #a { #a0 . 123 | #a1 [x, y]. [%y, %x] }   }
match #a #a1 [3, 4] { #a { #a0 . 123 | #a1 [x, y]. [%y, %x] }   }
